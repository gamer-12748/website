[{"P:\\website\\website\\src\\index.js":"1","P:\\website\\website\\src\\App.js":"2","P:\\website\\website\\src\\Component\\Aihome.js":"3","P:\\website\\website\\src\\Component\\NavigationBar.js":"4","P:\\website\\website\\src\\Component\\pages\\CyborticsHumanoid.js":"5","P:\\website\\website\\src\\Component\\pages\\GithubRepositories.js":"6","P:\\website\\website\\src\\Component\\pages\\Home.js":"7","P:\\website\\website\\src\\Component\\pages\\AboutMe.js":"8","P:\\website\\website\\src\\Component\\Button.js":"9","P:\\website\\website\\src\\Component\\pages\\gitcard.js":"10","P:\\website\\website\\src\\Component\\HeroSection.js":"11","P:\\website\\website\\src\\Component\\Cards.js":"12","P:\\website\\website\\src\\Component\\Footer.js":"13","P:\\website\\website\\src\\Component\\Carditem.js":"14","P:\\website\\website\\src\\Component\\404.js":"15","P:\\website\\website\\src\\firebase.js":"16","P:\\website\\website\\src\\bad-words\\badwords.js":"17","P:\\website\\website\\src\\Component\\pages\\Testimonials.js":"18","P:\\website\\website\\src\\Component\\pages\\dsm.js":"19"},{"size":483,"mtime":1606740427022,"results":"20","hashOfConfig":"21"},{"size":1692,"mtime":1610440647279,"results":"22","hashOfConfig":"21"},{"size":208,"mtime":1606818824487,"results":"23","hashOfConfig":"21"},{"size":3254,"mtime":1607253729654,"results":"24","hashOfConfig":"21"},{"size":4662,"mtime":1607764747955,"results":"25","hashOfConfig":"21"},{"size":1311,"mtime":1606973327423,"results":"26","hashOfConfig":"21"},{"size":260,"mtime":1607064276817,"results":"27","hashOfConfig":"21"},{"size":3553,"mtime":1607160535229,"results":"28","hashOfConfig":"21"},{"size":943,"mtime":1606902889122,"results":"29","hashOfConfig":"21"},{"size":284,"mtime":1606902838634,"results":"30","hashOfConfig":"21"},{"size":836,"mtime":1606985973468,"results":"31","hashOfConfig":"21"},{"size":1067,"mtime":1606981158809,"results":"32","hashOfConfig":"21"},{"size":6952,"mtime":1607237794337,"results":"33","hashOfConfig":"21"},{"size":664,"mtime":1606902995251,"results":"34","hashOfConfig":"21"},{"size":502,"mtime":1607067658655,"results":"35","hashOfConfig":"21"},{"size":558,"mtime":1607271909345,"results":"36","hashOfConfig":"21"},{"size":339,"mtime":1607271902411,"results":"37","hashOfConfig":"21"},{"size":4523,"mtime":1610442169783,"results":"38","hashOfConfig":"21"},{"size":15249,"mtime":1610535040260,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1bxcx5q",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"P:\\website\\website\\src\\index.js",[],["80","81"],"P:\\website\\website\\src\\App.js",[],"P:\\website\\website\\src\\Component\\Aihome.js",[],"P:\\website\\website\\src\\Component\\NavigationBar.js",[],"P:\\website\\website\\src\\Component\\pages\\CyborticsHumanoid.js",[],"P:\\website\\website\\src\\Component\\pages\\GithubRepositories.js",[],"P:\\website\\website\\src\\Component\\pages\\Home.js",[],"P:\\website\\website\\src\\Component\\pages\\AboutMe.js",[],"P:\\website\\website\\src\\Component\\Button.js",[],"P:\\website\\website\\src\\Component\\pages\\gitcard.js",[],"P:\\website\\website\\src\\Component\\HeroSection.js",[],"P:\\website\\website\\src\\Component\\Cards.js",[],"P:\\website\\website\\src\\Component\\Footer.js",[],"P:\\website\\website\\src\\Component\\Carditem.js",[],"P:\\website\\website\\src\\Component\\404.js",[],"P:\\website\\website\\src\\firebase.js",[],"P:\\website\\website\\src\\bad-words\\badwords.js",[],"P:\\website\\website\\src\\Component\\pages\\Testimonials.js",["82"],"import React, { useState, useEffect } from 'react'\r\nimport { isProfane } from '../../bad-words/badwords'\r\n//import { Button } from '../Button';\r\nimport firebase from '../../firebase'\r\nimport './testimonial.css'\r\n\r\nvar alldoc = []\r\nfunction Testimonials() {\r\n  const [name, setname] = useState('')\r\n  const [Testimonial, setTestimonial] = useState('')\r\n  const [successem, Setsuccessem] = useState(false)\r\n  const [Errorr, SetErrorr] = useState('')\r\n  const [DisplayError, SetDisplayError] = useState(false)\r\n  const testimonyread = firebase.firestore().collection('testimonies')\r\n  const [condi, setcondi] = useState(false)\r\n  const TestimonialInputHandler = (e) => {\r\n    SetDisplayError(false)\r\n    SetErrorr('')\r\n    setTestimonial(e.target.value)\r\n  }\r\n  const NameInputHandler = (e) => {\r\n    SetDisplayError(false)\r\n    SetErrorr('')\r\n    setname(e.target.value)\r\n  }\r\n  async function handleTestimonySubmit() {\r\n    SetDisplayError(false)\r\n    SetErrorr('')\r\n    const snaapshot = await testimonyread.where('name', '==', name).get()\r\n    if (isProfane(name).length > 0) {\r\n      SetDisplayError(true)\r\n      SetErrorr(\r\n        'This name \"' +\r\n          String(name) +\r\n          '\" has been identified as profane ,if this is a mistake contact-me!!',\r\n      )\r\n    } else {\r\n      if (isProfane(Testimonial).length > 0) {\r\n        SetDisplayError(true)\r\n        SetErrorr(\r\n          'This testimonial word \"' +\r\n            String(isProfane(Testimonial)) +\r\n            '\" has been identified as profane ,if this is a mistake contact-me!!',\r\n        )\r\n      } else {\r\n        if (Testimonial.length > 10 || name.length> 5) {\r\n          if (snaapshot.empty === true) {\r\n            testimonyread.add({\r\n              name: name,\r\n              testimony: Testimonial,\r\n            })\r\n            Setsuccessem(true)\r\n          } else {\r\n            SetDisplayError(true)\r\n            SetErrorr(\r\n              'This name has alread added an testimony, if this is a mistake contact-me!!',\r\n            )\r\n          }\r\n        } else {\r\n          SetDisplayError(true)\r\n          SetErrorr(\r\n            'Your name or testimony is too short, please write testimony or name that is longer than a single word.',\r\n          )\r\n        }\r\n      }\r\n    }\r\n  }\r\n  async function Gettestimon() {\r\n    alldoc = []\r\n    const snapshot = await testimonyread.where('testimony', '!=', null).get()\r\n    if (!snapshot.empty) {\r\n      snapshot.forEach((doc) => {\r\n        alldoc.push(doc.data())\r\n      })\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    async function getTok() {\r\n      await Gettestimon();\r\n      alldoc.map((forget) => console.log(forget.name));\r\n      setcondi(true);\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }\r\n    getTok()\r\n  }, [condi])\r\n  return (\r\n    <>\r\n      <h1 className=\"testimonials\">Testimonies</h1>\r\n      {condi ? (\r\n        alldoc.map((forget, index) => (\r\n          <h2 className=\"decide\">\r\n            {index + 1}. \"{forget.name}\" say's, \"{forget.testimony}\"\r\n          </h2>\r\n        ))\r\n      ) : (\r\n        <p>Getting them Please wait</p>\r\n      )}\r\n      <hr />\r\n      <div className=\"testimonials-text\">\r\n        <h1>\r\n          Enter your Testimonials below, pending automatic moderation they will\r\n          be added.\r\n        </h1>\r\n        {successem ? (\r\n          <>\r\n            <h2>\r\n              Testimonial \"{String(Testimonial)}\" by \"{String(name)}\" has been\r\n              Moderated and added, thank you for sharing, (if spam will be\r\n              deleted with 24 hours)\r\n            </h2>\r\n          </>\r\n        ) : (\r\n          <div className=\"temon\">\r\n            <input\r\n              className=\"temoninput\"\r\n              type=\"text\"\r\n              placeholder=\"Your Full Name\"\r\n              id=\"nametext\"\r\n              onChange={NameInputHandler}\r\n            />\r\n            <input\r\n              className=\"temoninput\"\r\n              type=\"text\"\r\n              placeholder=\"Your Testimonial\"\r\n              id=\"testimonialtext\"\r\n              onChange={TestimonialInputHandler}\r\n            />\r\n            <button\r\n              className=\"mybtn\"\r\n              type=\"button\"\r\n              onClick={() => handleTestimonySubmit()}\r\n            >\r\n              Submit Testimonial\r\n            </button>\r\n\r\n            {DisplayError ? (\r\n              <p style={{ color: '#f44a1f' }}>{Errorr}</p>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Testimonials\r\n","P:\\website\\website\\src\\Component\\pages\\dsm.js",["83"],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":85,"column":6,"nodeType":"90","endLine":85,"endColumn":13,"suggestions":"91"},{"ruleId":"88","severity":1,"message":"92","line":42,"column":6,"nodeType":"90","endLine":42,"endColumn":19,"suggestions":"93"},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Gettestimon'. Either include it or remove the dependency array.","ArrayExpression",["96"],"React Hook useEffect has a missing dependency: 'handleListen'. Either include it or remove the dependency array.",["97"],"no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [Gettestimon, condi]",{"range":"102","text":"103"},"Update the dependencies array to be: [handleListen, isListening]",{"range":"104","text":"105"},[2760,2767],"[Gettestimon, condi]",[1506,1519],"[handleListen, isListening]"]